<?xml version="1.0"?>
<testsuite name="HeadlessChrome 64.0.3282 (Windows 10.0.0)" package="" timestamp="2018-02-23T10:44:53" id="0" hostname="LPA-H-NB-171" tests="37" errors="0" failures="0" time="0">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/64.0.3282.167 Safari/537.36"/>
  </properties>
  <testcase name="AdviseComponent should init an advice" time="0" classname="AdviseComponent"/>
  <testcase name="LoginComponent should construct a form" time="0" classname="LoginComponent"/>
  <testcase name="LoginComponent should navigate to return url" time="0" classname="LoginComponent"/>
  <testcase name="LoginComponent should navigate to default page without return url" time="0" classname="LoginComponent"/>
  <testcase name="LoginComponent should do nothing on submit if !valid" time="0" classname="LoginComponent"/>
  <testcase name="AuthGuard should activate and return true" time="0" classname="AuthGuard"/>
  <testcase name="AuthGuard should navigate to login and return false" time="0" classname="AuthGuard"/>
  <testcase name="TokenInterceptor should inject authorization token into requests" time="0" classname="TokenInterceptor"/>
  <testcase name="TokenInterceptor should navigate to login on 401" time="0" classname="TokenInterceptor"/>
  <testcase name="TokenInterceptor should navigate to login on 403" time="0" classname="TokenInterceptor"/>
  <testcase name="TokenInterceptor should throw an error if not 401 or 403" time="0" classname="TokenInterceptor"/>
  <testcase name="AuthService isAuthenticated should return false" time="0" classname="AuthService"/>
  <testcase name="AuthService isAuthenticated should return false" time="0" classname="AuthService"/>
  <testcase name="AuthService getToken should return string from localStorage" time="0" classname="AuthService"/>
  <testcase name="AuthService logout should remove token from localStorage" time="0" classname="AuthService"/>
  <testcase name="AuthService login should return true and add token to localStorage" time="0" classname="AuthService"/>
  <testcase name="AuthService login should return false and nothing add to localStorage" time="0" classname="AuthService"/>
  <testcase name="AuthService login should return observable with true" time="0" classname="AuthService"/>
  <testcase name="AuthService login should return observable with false" time="0" classname="AuthService"/>
  <testcase name="BaseService sould return error from header" time="0" classname="BaseService"/>
  <testcase name="BaseService sould return model error" time="0" classname="BaseService"/>
  <testcase name="Regex Model should match an email" time="0" classname="Regex Model"/>
  <testcase name="Regex Model should not match an email" time="0" classname="Regex Model"/>
  <testcase name="UserService should get users" time="0" classname="UserService"/>
  <testcase name="UserService should get an user" time="0" classname="UserService"/>
  <testcase name="UserService should post a new user" time="0" classname="UserService"/>
  <testcase name="UserService should put an existing user" time="0" classname="UserService"/>
  <testcase name="UserService should delete an existing user" time="0" classname="UserService"/>
  <testcase name="UserDeleteComponent should unsubscribe" time="0" classname="UserDeleteComponent"/>
  <testcase name="UserDeleteComponent should init an existing user" time="0" classname="UserDeleteComponent"/>
  <testcase name="UserDeleteComponent should do nothing on submit if !valid" time="0" classname="UserDeleteComponent"/>
  <testcase name="UsereditComponent should init a new user with id 0" time="0" classname="UsereditComponent"/>
  <testcase name="UsereditComponent should unsubscribe" time="0" classname="UsereditComponent"/>
  <testcase name="UsereditComponent should init an existing user" time="0" classname="UsereditComponent"/>
  <testcase name="UsereditComponent should do nothing on submit if !valid" time="0" classname="UsereditComponent"/>
  <testcase name="UsereditComponent should submit, call saveUser and navigate by url" time="0" classname="UsereditComponent"/>
  <testcase name="UsersComponent should load users on init" time="0" classname="UsersComponent"/>
  <system-out>
    <![CDATA[HeadlessChrome 64.0.3282 (Windows 10.0.0) LOG: Object{}

]]>
  </system-out>
  <system-err/>
</testsuite>